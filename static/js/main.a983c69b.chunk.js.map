{"version":3,"sources":["Display.js","Buttons.js","Calculator.js","App.js","index.js"],"names":["Display","_ref","value","react_default","a","createElement","className","id","Buttons","handleAction","onClick","Calculator","_useState","useState","_useState2","Object","slicedToArray","buffer","setBuffer","_useState3","_useState4","operator","setOperator","_useState5","_useState6","runningTotal","setRunningTotal","handleSymbol","includes","flushOperator","parseFloat","symbol","floatBuffer","handleMath","handleNumber","numberString","toString","answer","src_Display","src_Buttons","e","target","isNaN","App","StrictMode","src_Calculator","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a983c69b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Display = ({value}) => {\r\n    return (\r\n        <div className=\"calc-display\" id=\"display\">\r\n        {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React from \"react\";\r\n\r\n\r\nconst Buttons = ({ handleAction }) => {\r\n  return (\r\n    <div className=\"btn-container\">\r\n      <button id=\"clear\" value=\"AC\" onClick={handleAction} className=\"calc-btn\">AC</button>\r\n      <button id=\"sign\" value=\"+/-\" onClick={handleAction} className=\"calc-btn\">+/-</button>\r\n      <button id=\"percent\" value=\"%\" onClick={handleAction} className=\"calc-btn\">%</button>\r\n      <button id=\"divide\" value=\"/\" onClick={handleAction} className=\"calc-btn\">&divide;</button>\r\n      <button id=\"seven\" value=\"7\" onClick={handleAction} className=\"calc-btn\">7</button>\r\n      <button id=\"eight\" value=\"8\" onClick={handleAction} className=\"calc-btn\">8</button>\r\n      <button id=\"nine\" value=\"9\" onClick={handleAction} className=\"calc-btn\">9</button>\r\n      <button id=\"multiply\" value=\"X\" onClick={handleAction} className=\"calc-btn\">&times;</button>\r\n      <button id=\"four\" value=\"4\" onClick={handleAction} className=\"calc-btn\">4</button>\r\n      <button id=\"five\" value=\"5\" onClick={handleAction} className=\"calc-btn\">5</button>\r\n      <button id=\"six\" value=\"6\" onClick={handleAction} className=\"calc-btn\">6</button>\r\n      <button id=\"subtract\" value=\"-\" onClick={handleAction} className=\"calc-btn\">&minus;</button>\r\n      <button id=\"one\" value=\"1\" onClick={handleAction} className=\"calc-btn\">1</button>\r\n      <button id=\"two\" value=\"2\" onClick={handleAction} className=\"calc-btn\">2</button>\r\n      <button id=\"three\" value=\"3\" onClick={handleAction} className=\"calc-btn\">3</button>\r\n      <button id=\"add\" value=\"+\" onClick={handleAction} className=\"calc-btn\">+</button>\r\n      <button id=\"zero\" value=\"0\" onClick={handleAction} className=\"calc-btn oval\">0</button>\r\n      <button id=\"decimal\" value=\".\" onClick={handleAction} className=\"calc-btn\">.</button>\r\n      <button id=\"equals\" value=\"=\" onClick={handleAction} className=\"calc-btn\">=</button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { useState } from \"react\";\r\nimport Display from \"./Display\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst Calculator = () => {\r\n  const [buffer, setBuffer] = useState('0');\r\n  const [operator, setOperator] = useState(null);\r\n  const [runningTotal, setRunningTotal] = useState(0);\r\n\r\n  const clickMe = e => {\r\n    let value = e.target.value.toString();\r\n    \r\n    if (isNaN(value)) {\r\n      //this is not a number\r\n      handleSymbol(value);\r\n  } else {\r\n      //this is a number\r\n      handleNumber(value);\r\n  }\r\n\r\n\r\n  };\r\n  const handleSymbol = (value) => {\r\n    \r\n    if (value === \"AC\") {\r\n      setBuffer('0');\r\n      setOperator(null);\r\n      setRunningTotal(0);\r\n\r\n    } else if (value === \"%\") {\r\n      setBuffer(buffer / 100);\r\n\r\n    } else if (value === \"+/-\") {\r\n      setBuffer(buffer * -1);\r\n\r\n    } \r\n    else if (value === \".\") {\r\n      if (!buffer.includes('.')) {\r\n        setBuffer(buffer + value);\r\n      }\r\n      \r\n      // Handle decimal\r\n    } \r\n    else if (value === \"=\") {\r\n      if (operator=== null) {\r\n        // you need two numbers to do math\r\n        return;\r\n      } \r\n\r\n      setBuffer(flushOperator(parseFloat(buffer)));\r\n      setOperator(value);\r\n      setRunningTotal(0);\r\n    }\r\n     else  {\r\n        handleMath(value);\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const handleNumber = (numberString) => {\r\n    if (buffer === '0')  {\r\n        setBuffer(numberString.toString());\r\n    } \r\n    else if (operator === \"=\") {\r\n        setOperator(null);\r\n        setBuffer(numberString.toString());\r\n    }\r\n    else {\r\n      setBuffer(buffer + numberString.toString());\r\n    }\r\n}\r\n\r\n  const flushOperator = (value) => {\r\n    let answer = 0;\r\n\r\n      if (operator === \"+\") {\r\n        answer = parseFloat(runningTotal) + parseFloat(value);\r\n    } else if (operator === \"-\") {\r\n      answer = parseFloat(runningTotal) - parseFloat(value);\r\n        \r\n    } else if (operator === \"X\") {\r\n      answer = parseFloat(runningTotal) * parseFloat(value);\r\n    } else {\r\n      answer = parseFloat(runningTotal) / parseFloat(value);\r\n    }\r\n\r\n    setRunningTotal(answer);\r\n    return answer;\r\n  }\r\n\r\n  function handleMath(symbol) {\r\n\r\n    if (buffer === '0' && operator != null) {\r\n      setOperator(symbol);\r\n      return;\r\n        \r\n    } else if (buffer === '0' ) {\r\n      return;\r\n      \r\n    }\r\n\r\n    const floatBuffer = parseFloat(buffer);\r\n  \r\n    if (runningTotal === 0) {\r\n       setRunningTotal(floatBuffer);\r\n    } else {\r\n        flushOperator(floatBuffer);\r\n    }\r\n    setOperator(symbol);\r\n    setBuffer('0');\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <main>\r\n      <div className=\"calc-container\">\r\n        <Display value={buffer} />\r\n        <Buttons handleAction={clickMe} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\n//import ReactDOM from \"react-dom\";\nimport Calculator from \"./Calculator\";\n\nconst App = () => {\n  return (\n    <React.StrictMode>\n        <Calculator />\n    </React.StrictMode>\n  );\n};\n export default App;\n//ReactDOM.render(<App />, document.getElementById(\"root\"));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}